{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN56rtoBfyV2+TpfQViZbom"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#importing the required libraries/dependencies\n","import pandas as pd\n","import numpy as np\n"],"metadata":{"id":"Sb_x6VsuuOJM","executionInfo":{"status":"ok","timestamp":1678730319907,"user_tz":-330,"elapsed":1152,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["#loading the downloaded csv file from Kaggle\n","wine_dataset = pd.read_csv('/content/winequality-red.csv')"],"metadata":{"id":"C2NB-tS-8WWv","executionInfo":{"status":"ok","timestamp":1678730319910,"user_tz":-330,"elapsed":46,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["#converting the wine_dataset into NumPy array\n","data = wine_dataset.values"],"metadata":{"id":"pEE-A1Uf9NcQ","executionInfo":{"status":"ok","timestamp":1678730319911,"user_tz":-330,"elapsed":47,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["#knowing the shape of the wine dataset\n","shape = data.shape\n","print(\"Shape: \",shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5nsGC6X48u9z","executionInfo":{"status":"ok","timestamp":1678730319911,"user_tz":-330,"elapsed":46,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"4be8a93c-79b2-486f-8833-e4ab11033f40"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape:  (1599, 12)\n"]}]},{"cell_type":"code","source":["#calculating the median of all the 12 columns of the data\n","medians = np.median(data, axis=0)\n","print(\"Medians: \",medians)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KFBe9yyp9Bur","executionInfo":{"status":"ok","timestamp":1678730319912,"user_tz":-330,"elapsed":44,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"530f55b6-b4bf-4eab-8e1e-a6bb0c3c77f6"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Medians:  [ 7.9      0.52     0.26     2.2      0.079   14.      38.       0.99675\n","  3.31     0.62    10.2      6.     ]\n"]}]},{"cell_type":"code","source":["#calculating the mean of each colums\n","mean = np.mean(data, axis=0)\n","print(\"Mean is :\",mean)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2KT5sjdF-7AC","executionInfo":{"status":"ok","timestamp":1678730319912,"user_tz":-330,"elapsed":38,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"431d8fdd-a192-4eda-d39a-055bccc2780b"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean is : [ 8.31963727  0.52782051  0.27097561  2.5388055   0.08746654 15.87492183\n"," 46.46779237  0.99674668  3.3111132   0.65814884 10.42298311  5.63602251]\n"]}]},{"cell_type":"code","source":["#calculating the Standard Deviation of each column\n","standard_dvn = np.std(data ,axis=0)\n","print(\"Standard Deviation is :\",standard_dvn)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZMaMEcvd_aAC","executionInfo":{"status":"ok","timestamp":1678730319913,"user_tz":-330,"elapsed":35,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"76a159b8-049a-4a8c-9657-2e315f93731d"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Standard Deviation is : [1.74055180e+00 1.79003704e-01 1.94740214e-01 1.40948711e+00\n"," 4.70505826e-02 1.04568856e+01 3.28850367e+01 1.88674370e-03\n"," 1.54338181e-01 1.69453967e-01 1.06533430e+00 8.07316877e-01]\n"]}]},{"cell_type":"code","source":["#calculating the minimum of each columns\n","minimum = np.min(data, axis=0)\n","print(\"The minimum value of each column are: \", minimum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D1tGfoQM_vd5","executionInfo":{"status":"ok","timestamp":1678730319913,"user_tz":-330,"elapsed":33,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"1168bb03-4327-470d-da10-cc32b7a5fbb6"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["The minimum value of each column are:  [4.6     0.12    0.      0.9     0.012   1.      6.      0.99007 2.74\n"," 0.33    8.4     3.     ]\n"]}]},{"cell_type":"code","source":["#calculating the maximum of each columns\n","maximum = np.max(data,axis=0)\n","print(\"The maximum value of each column is :\", maximum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g3eQuZBsAZ5c","executionInfo":{"status":"ok","timestamp":1678730319913,"user_tz":-330,"elapsed":31,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"a2489a20-a4a6-410c-8c93-cadc4097c343"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["The maximum value of each column is : [ 15.9       1.58      1.       15.5       0.611    72.      289.\n","   1.00369   4.01      2.       14.9       8.     ]\n"]}]},{"cell_type":"code","source":["#calculate the range of each column\n","ranges = np.ptp(data, axis=0)\n","print(\"Ranges of all the columns are: \", ranges)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wa7Pk2YVBWO9","executionInfo":{"status":"ok","timestamp":1678730319913,"user_tz":-330,"elapsed":29,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"406a3c9e-60d2-4007-fb89-37b8c479b7a0"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Ranges of all the columns are:  [1.130e+01 1.460e+00 1.000e+00 1.460e+01 5.990e-01 7.100e+01 2.830e+02\n"," 1.362e-02 1.270e+00 1.670e+00 6.500e+00 5.000e+00]\n"]}]},{"cell_type":"code","source":["#Reshape the data into a 3D array\n","reshaped = data.reshape(1599, 12, 1)\n","print(\"Reshaped Data: \\n\", reshaped)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h0NNCX61BjdJ","executionInfo":{"status":"ok","timestamp":1678730319914,"user_tz":-330,"elapsed":28,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"cf191505-907e-4891-d8f9-21d9ffc6d957"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Reshaped Data: \n"," [[[ 7.4  ]\n","  [ 0.7  ]\n","  [ 0.   ]\n","  ...\n","  [ 0.56 ]\n","  [ 9.4  ]\n","  [ 5.   ]]\n","\n"," [[ 7.8  ]\n","  [ 0.88 ]\n","  [ 0.   ]\n","  ...\n","  [ 0.68 ]\n","  [ 9.8  ]\n","  [ 5.   ]]\n","\n"," [[ 7.8  ]\n","  [ 0.76 ]\n","  [ 0.04 ]\n","  ...\n","  [ 0.65 ]\n","  [ 9.8  ]\n","  [ 5.   ]]\n","\n"," ...\n","\n"," [[ 6.3  ]\n","  [ 0.51 ]\n","  [ 0.13 ]\n","  ...\n","  [ 0.75 ]\n","  [11.   ]\n","  [ 6.   ]]\n","\n"," [[ 5.9  ]\n","  [ 0.645]\n","  [ 0.12 ]\n","  ...\n","  [ 0.71 ]\n","  [10.2  ]\n","  [ 5.   ]]\n","\n"," [[ 6.   ]\n","  [ 0.31 ]\n","  [ 0.47 ]\n","  ...\n","  [ 0.66 ]\n","  [11.   ]\n","  [ 6.   ]]]\n"]}]},{"cell_type":"code","source":["#calculate the sum of each row\n","row_sums = np.sum(data, axis=1)\n","print(\"Row Sums: \", row_sums)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ORJfBuSrB747","executionInfo":{"status":"ok","timestamp":1678730319914,"user_tz":-330,"elapsed":26,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"bc1d95b8-cebb-475d-8eb0-e227a80e0612"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Row Sums:  [ 74.5438  123.0548   99.699   ... 100.48174 105.21547  92.49249]\n"]}]},{"cell_type":"code","source":["#calculating the dot product of two columns\n","dot_product = np.dot(data[:, 0], data[:, 1])\n","print(\"Dot Product of Columns 1 and 2: \", dot_product)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iq0e7qkhCJpU","executionInfo":{"status":"ok","timestamp":1678730319915,"user_tz":-330,"elapsed":24,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"41a27d9e-a907-4b21-c662-65a08206c1eb"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Dot Product of Columns 1 and 2:  6894.0464999999995\n"]}]},{"cell_type":"code","source":["#calculating the index of the minimum values of the array\n","min_index = np.argmin(data, axis=0)\n","print(\"Index :\", min_index)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U432bhlwElF8","executionInfo":{"status":"ok","timestamp":1678730319916,"user_tz":-330,"elapsed":24,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"89e865d3-374d-474d-9e23-611efdd5c24b"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Index : [  45  948    0 1017  836  530  915 1017  151  170  517  459]\n"]}]},{"cell_type":"code","source":["#calculating the index of the maximum values of the array\n","max_index = np.argmax(data, axis=0)\n","print(\"Index :\", max_index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ixqYdp5FhJh","executionInfo":{"status":"ok","timestamp":1678730319916,"user_tz":-330,"elapsed":21,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"83e8abf8-57b2-4dde-9c22-f41a07152f3d"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["Index : [ 652 1299  151  480  258 1244 1081 1434 1316  151  652  267]\n"]}]},{"cell_type":"code","source":["#trasnposing the arrays of the dataset\n","transpose = np.transpose(data)\n","print(\"Transposed Array :\", transpose)\n","\n","#the shape changes too as we have taken the transpose\n","print(\"The new shape is:\",transpose.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeAYi4tIGktT","executionInfo":{"status":"ok","timestamp":1678730319916,"user_tz":-330,"elapsed":18,"user":{"displayName":"Aryan Adlakha","userId":"13858018029771559335"}},"outputId":"5ed914fb-796a-4098-eaf8-4326c4389d9d"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Transposed Array : [[ 7.4    7.8    7.8   ...  6.3    5.9    6.   ]\n"," [ 0.7    0.88   0.76  ...  0.51   0.645  0.31 ]\n"," [ 0.     0.     0.04  ...  0.13   0.12   0.47 ]\n"," ...\n"," [ 0.56   0.68   0.65  ...  0.75   0.71   0.66 ]\n"," [ 9.4    9.8    9.8   ... 11.    10.2   11.   ]\n"," [ 5.     5.     5.    ...  6.     5.     6.   ]]\n","The new shape is: (12, 1599)\n"]}]}]}